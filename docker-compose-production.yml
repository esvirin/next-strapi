version: '3.1'

services:

  next:
    env_file:
      - .env
    build:
      context: ./next
      dockerfile: ./Dockerfile-production
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=${HOST_NAME}
      - NEXT_PUBLIC_INTERNAL_URL=${INTERNAL_URL}
      - NEXT_PUBLIC_TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    ports:
      - "3000:3000"
    volumes:
      - ./next/pages:/app/pages
      - ./next/public:/app/public
      - ./next/styles:/app/styles
      - ./next/components:/app/components
      - ./next/api:/app/api
      - ./next/helpers:/app/helpers
    networks:
      - net
    depends_on:
      - postgres


  strapi:
    image: strapi/strapi
    restart: always
    environment:
      NODE_ENV: production
      DATABASE_CLIENT: postgres
      DATABASE_NAME: strapi
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: strapi
      DATABASE_PASSWORD: strapi
    volumes:
      - ./strapi:/srv/app
    ports:
      - '1337:1337'
    mem_reservation: 512m
    networks:
      - net
      - back
    depends_on:
      - postgres

  postgres:
   image: postgres
   restart: always
   expose:
     - 5432
   environment:
     POSTGRES_DB: strapi
     POSTGRES_USER: strapi
     POSTGRES_PASSWORD: strapi
   networks:
    - back
   volumes:
     - ./data:/var/lib/postgresql/data


networks:
  back:
    driver: bridge
  net:
    driver: bridge